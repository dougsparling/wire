// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ../wire-runtime/src/test/proto/differentpackage/bar.proto at 5:1
package com.squareup.differentpackage.protos.bar;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;

public final class Bar extends Message {
  private static final long serialVersionUID = 0L;

  public Bar() {
  }

  private Bar(Builder builder) {
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    return other instanceof Bar;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<Bar> {
    public Builder() {
    }

    public Builder(Bar message) {
      super(message);
    }

    @Override
    public Bar build() {
      return new Bar(this);
    }
  }

  public static final class Baz extends Message {
    private static final long serialVersionUID = 0L;

    public Baz() {
    }

    private Baz(Builder builder) {
      setBuilder(builder);
    }

    @Override
    public boolean equals(Object other) {
      return other instanceof Baz;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public static final class Builder extends com.squareup.wire.Message.Builder<Baz> {
      public Builder() {
      }

      public Builder(Baz message) {
        super(message);
      }

      @Override
      public Baz build() {
        return new Baz(this);
      }
    }

    public static final class Moo extends Message {
      private static final long serialVersionUID = 0L;

      public static final String DEFAULT_BOO = "";

      @ProtoField(
          tag = 1,
          type = Message.Datatype.STRING
      )
      public final String boo;

      public Moo(String boo) {
        this.boo = boo;
      }

      private Moo(Builder builder) {
        this(builder.boo);
        setBuilder(builder);
      }

      @Override
      public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof Moo)) return false;
        return equals(boo, ((Moo) other).boo);
      }

      @Override
      public int hashCode() {
        int result = hashCode;
        return result != 0 ? result : (hashCode = boo != null ? boo.hashCode() : 0);
      }

      public static final class Builder extends com.squareup.wire.Message.Builder<Moo> {
        public String boo;

        public Builder() {
        }

        public Builder(Moo message) {
          super(message);
          if (message == null) return;
          this.boo = message.boo;
        }

        public Builder boo(String boo) {
          this.boo = boo;
          return this;
        }

        @Override
        public Moo build() {
          return new Moo(this);
        }
      }
    }
  }
}
